@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="text-center">

    <form method="post" id="editForm"
              data-ajax="true"
              data-ajax-update="#grid"
              data-ajax-complete="completed"
              data-ajax-failure="failed"
              data-ajax-begin="begin"
              data-ajax-loading="#spinner">   

            <div class="d-flex justify-content-between">
                <div class="form-group col-4">
                    <label>GroupBy</label>
                    <select class="form-control" id="groupBySelector"
                            asp-for="GroupById"
                            asp-items="Model.GroupByOptions">
                    </select>
                </div>

                <div class="form-group col-6">                    
                    <button class="btn btn-primary" id="load">
                        Manual refresh
                    </button>
                    <p for="load">Last update: <span id="lastUpdateLabel"></span></p>
                </div>
            </div>
    </form>
    

    <div class="mt-2" id="grid">
        <partial name="_TreeView" for="@Model.StatusList" />
    </div>
</div>


@section scripts {
    <script src="~/lib/jquery-ajax-unobtrusive/jquery.unobtrusive-ajax.min.js"></script>
    <script>
        completed = function (xhr, data) {
            document.getElementById("load").disabled = false;
            document.getElementById("lastUpdateLabel").innerText = (new Date()).toLocaleTimeString()
        };
        failed = function (xhr, data) {
            document.getElementById("load").disabled = false;
        };
        begin = function (xhr, data) {
            document.getElementById("load").disabled = true;
        };

        // Handle page visibility change events
        function visibilityListener() {
          switch(document.visibilityState) {
            case "hidden":
                intervalIds.forEach(x => clearInterval(x))
                break;
            case "visible":
                intervalIds.forEach(x => clearInterval(x))
                intervalIds.push( setInterval(_ => {$("#editForm").submit();}, 5000) );
                break;
          }
        }

        document.addEventListener("visibilitychange", visibilityListener);
        document.getElementById("lastUpdateLabel").innerText = (new Date()).toLocaleTimeString()
        intervalIds = []
        intervalIds.push( setInterval(_ => {$("#editForm").submit();}, 5000) );
    </script>    
}